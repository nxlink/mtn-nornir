Nornir General Runner
=====================

This repository provides a general-purpose Python 3 script using Nornir to connect to network devices (routers/switches), run show commands or push configuration, and handle multiple hosts, ports, and credential fallbacks with configurable concurrency.

Quick Start
-----------

1) Create a defaults file (YAML or JSON) for ports, credentials, and other settings â€” you can now include hosts, commands, save directory, and flags. Example YAML in `lab/defaults.yaml`:

```
ports: [22, 2222]
credentials:
  - username: netops
    password: supersecret
  - username: backup
    password: backuppass
platform: cisco_ios
mode: show  # or config
workers: 20
timeout: 30
# enable_secret: enablepass

# Hosts/commands can live here (CLI still overrides):
hosts: ["10.0.0.1", "10.0.0.2|mikrotik_routeros"]
# hosts_file: lab/hosts.txt
commands: ["show version", "show ip int br"]
# commands_file: compliance/backup-commands.txt

# Optional inventory dir for SimpleInventory (uses hosts.yaml/groups.yaml/defaults.yaml)
# inventory_dir: inventory/

# Outputs and behavior flags
save_dir: compliance/backups
per_command_output: false
quiet: false
dry_run: false

# Env file to auto-load
# env_file: .env
```

Note: `.env` is now reserved for inventory source variables only (e.g., `INVENTORY_DIR`, `NETBOX_URL/TOKEN`). See `.env.example`.

2) Install dependencies:

```
pip install -r requirements.txt
```

3) Run the script:

Show mode (read-only):

```
python nornir_runner.py \
  --hosts 10.0.0.1,10.0.0.2 \
  --commands "show version","show ip int br" \
  --defaults-file lab/defaults.yaml \
  --mode show
```

Config mode (push configuration):

```
python nornir_runner.py \
  --hosts-file hosts.txt \
  --commands-file cmds.txt \
  --defaults-file lab/defaults.yaml \
  --mode config
```

You can still override ports on the CLI (highest precedence, then `--defaults-file`, then env, then `22`):

```
python nornir_runner.py --hosts 10.0.0.1 --commands "show clock" --defaults-file lab/defaults.yaml --ports 22,2201
```

Run Using Only Defaults
-----------------------

If your defaults file contains hosts and commands, you can run with minimal CLI:

```
python nornir_runner.py --defaults-file lab/defaults.yaml --mode show
```

Outputs
-------

- Results print to stdout. Optionally save per-host output files with `--save-dir outputs` or by setting `save_dir` in the defaults file.

Notes
-----

- The script tries all provided SSH ports and credential pairs per host until a combination works.
- `--platform` sets Netmiko `device_type` (e.g., `cisco_ios`, `arista_eos`, `mikrotik_routeros`). Prefer `platform` in `--defaults-file`; env `NORNIR_PLATFORM` is a fallback.
- For show commands that require enable mode, prefer `enable_secret` in `--defaults-file`; env `NORNIR_ENABLE_SECRET` is a fallback.
- Concurrency is controlled by `--workers` (prefer in `--defaults-file`; env fallback `NORNIR_WORKERS`). Each host is handled in parallel; within a host, port/credential attempts are tried sequentially for reliability.

Per-host Platform Override
--------------------------

- Supply per-host platform inline using `host|platform` tokens:

```
python nornir_runner.py \
  --hosts 10.0.0.1|mikrotik_routeros,10.0.0.2|cisco_ios \
  --commands "/system resource print" \
  --mode show
```

YAML Inventory (SimpleInventory)
--------------------------------

- Use an existing Nornir SimpleInventory by pointing to its directory containing `hosts.yaml`, `groups.yaml`, `defaults.yaml`:

```
python nornir_runner.py \
  --inventory-dir inventory/ \
  --commands "show version" \
  --defaults-file lab/defaults.yaml \
  --mode show

Defaults Precedence and Migration
---------------------------------

- Precedence: CLI > `--defaults-file` > environment variables > hard-coded defaults.
- Everything configurable via CLI (except `--defaults-file` itself) can also be set in the defaults file.
- Hosts/commands: can be provided via `hosts`, `hosts_file`, `commands`, `commands_file` in the defaults file; CLI flags override.
- Credentials: prefer `credentials` in the defaults file. Legacy `NORNIR_CREDENTIALS` is still accepted if defaults file doesnâ€™t provide credentials.
- Other legacy envs (`NORNIR_SSH_PORTS`, `NORNIR_PLATFORM`, `NORNIR_WORKERS`, `NORNIR_CMD_TIMEOUT`, `NORNIR_ENABLE_SECRET`) are used only if not supplied by CLI or defaults file.
- `.env` can be auto-loaded via `--env-file` or `env_file` in defaults; keep it for inventory-related variables only. See `.env.example`.

Output Mode
-----------

- Default mode prints one aggregated block per host.
- Use `--per-command-output` to print each command result per host and hide the aggregated block:

```
python nornir_runner.py \
  --hosts-file lab/hosts.txt \
  --commands-file lab/commands.txt \
  --defaults-file lab/defaults.yaml \
  --mode show \
  --per-command-output
```

- Use `--quiet` to suppress Nornir headers and show only raw device output (works with either aggregated or per-command mode):

```
python nornir_runner.py \
  --hosts-file lab/hosts.txt \
  --commands-file lab/commands.txt \
  --defaults-file lab/defaults.yaml \
  --mode show \
  --quiet
```
```

Dry-Run for Config
------------------

- Preview configuration without making changes:

```
python nornir_runner.py \
  --hosts 10.0.0.2 \
  --commands "interface loopback 9","description TEST" \
  --mode config \
  --dry-run
```

Defaults File Keys
------------------

Use these keys in your YAML/JSON defaults file. CLI flags override values here.

- ports: list of integers or comma string (e.g., `[22,2222]` or `"22,2222"`).
- credentials: list of objects `{username,password}` or list of `"user:pass"` or a semicolon string `"u1:p1;u2:p2"`.
- platform: Netmiko device_type (e.g., `cisco_ios`, `arista_eos`, `mikrotik_routeros`).
- mode: `show` (read-only) or `config` (push configuration).
- workers: integer concurrency for threaded runner.
- timeout: integer seconds for connect/command timeout.
- enable_secret: string for enable/privileged mode.
- hosts: list of hosts; supports `host|platform` tokens for per-host platform.
- hosts_file: path to a file with one host per line (also supports `host|platform`).
- commands: list of commands to run.
- commands_file: path to a file with one command per line.
- inventory_dir: path to a SimpleInventory directory with `hosts.yaml`, `groups.yaml`, `defaults.yaml`.
- save_dir: directory to write per-host outputs (e.g., `compliance/backups`).
- per_command_output: boolean; prints each command result as it runs.
- quiet: boolean; suppress Nornir headers and print only raw outputs.
- dry_run: boolean; preview config mode without pushing.
- env_file: path to a `.env` file to auto-load.

Precedence reminder: CLI > defaults file > environment variables > hard-coded defaults.
